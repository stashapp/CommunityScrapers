name: TheNude
performerByName:
  action: scrapeXPath
  queryURL: https://www.thenude.com/index.php?page=search&action=searchModels&__form_name=navbar-search&m_aka=on&m_name={}
  scraper: performerSearch
performerByURL:
  - action: scrapeXPath
    url:
      - thenude.com
    scraper: performerScraper
sceneByURL: &coverByURL
  - action: scrapeXPath
    url:
      - thenude.com/cover
    scraper: coverScraper
galleryByURL: *coverByURL

xPathScrapers:
  performerSearch:
    performer:
      Name:
        selector: //figcaption/span
        postProcess:
          - replace:
              - regex: "^AKA:"
                with: ""
      URL: //a[@class="model-name"]/@href
  performerScraper:
    performer:
      Name: //span[@class="model-name"]
      URL: //link[@rel="canonical"]/@href
      Twitter:
        selector: //a[text()="TWITTER"]//@href
        postProcess:
          - replace:
              - regex: 'https?://(?:www.)?twitter\.com\/'
                with: ""
              - regex: 'https?://(?:www.)?x\.com\/'
                with: ""
              - regex: \/$
                with: ""
              - regex: "tv"
                with: "TV"
              - regex: "official"
                with: "Official"
              - regex: '\s\s'
                with: " "
      Instagram:
        selector: //a[text()="INSTAGRAM"]//@href
        postProcess:
          - replace:
              - regex: 'https?://(?:www.)?instagram\.com\/'
                with: ""
              - regex: \/$
                with: ""
              - regex: "tv"
                with: "TV"
              - regex: "official"
                with: "Official"
              - regex: '\s\s'
                with: " "
      Birthdate:
        selector: //li/span[@class="list-quest"][contains(text(),'Born')]/following-sibling::text()
        postProcess:
          - parseDate: January 2006
          - parseDate: "??-??-2006"
      Ethnicity:
        selector: //li/span[@class="list-quest"][contains(text(),'Ethnicity')]/following-sibling::text()
        postProcess:
          - replace:
              - regex: "Ebony"
                with: "Black"
              - regex: "ebony"
                with: "Black"
              - regex: "white"
                with: "Caucasian"
              - regex: "White"
                with: "Caucasian"
              - regex: "hispanic"
                with: "Latin"
              - regex: "Hispanic"
                with: "Latin"
          - map:
              asian: Asian
              white: Caucasian
              black: Black
              hispanic: Latin
              Latina: Latin
              Arab: Middle Eastern
      Country:
        selector: //span[@itemprop="nationality"]/text()
        postProcess:
          - replace:
              - regex: '\bUnited\sStates\sof\sAmerica\b'
                with: "United States"
      HairColor:
        selector: //li/span[@class="list-quest"][contains(text(),'Hair')]/../text()
        postProcess:
          - replace:
              - regex: "Brown"
                with: Brunette
              - regex: '\bBrown\sHair\b'
                with: Brunette
              - regex: "Fair"
                with: Blonde
      Height:
        selector: //li/span[@class="list-quest"][contains(text(),'Height')]/following-sibling::text()
        postProcess:
          - replace:
              - regex: ^(\d+).+$
                with: "$1"
      Measurements:
        selector: //li/span[@class="list-quest"][contains(text(),'Measurements')]/../text()
        postProcess:
          - replace:
              - regex: \/.*$
                with: ""
      FakeTits:
        selector: //li/span[@class="list-quest"][contains(text(),'Breasts')]/../text()
        postProcess:
          - replace:
              - regex: ^[^\(]+\(([^\)]+)\).*$
                with: "$1"
              - regex: Fake
                with: "Augmented"
              - regex: Real
                with: "Natural"
              - regex: Medium
                with: ""
      CareerLength:
        selector: //li/span[@class="list-quest"][contains(text(),'Seen')]/following-sibling::text()
        concat: "-"
      Aliases:
        selector: //meta[@itemprop="additionalName"]/@content
        concat: ", "
      Tattoos:
        selector: //li/span[@class="list-quest"][contains(text(),'Tattoos')]/../text()
        postProcess:
          - replace:
              - regex: '\byes\b'
                with: "Various"
              - regex: '\bno\b'
                with: "None"
              - regex: '\bYes\b'
                with: "Various"
              - regex: "/bNo/b"
                with: "None"
              - regex: '\.'
                with: ""
      Piercings:
        selector: //li/span[@class="list-quest"][contains(text(),'Piercings')]/../text()
        postProcess:
          - replace:
              - regex: '\byes\b'
                with: "Various"
              - regex: '\bno\b'
                with: "None"
              - regex: '\bYes\b'
                with: "Various"
              - regex: "/bNo/b"
                with: "None"
              - regex: '\.'
                with: ""
      Image:
        selector: //link[@rel="canonical"]/@href
        postProcess:
          - replace:
              - regex: https:\/\/www\.thenude\.com\/
                with: "https://static.thenude.com/models/"
              - regex: \.htm
                with: "/medhead.jpg"
      Gender:
        selector: //meta[@itemprop="gender"]/@content
      Details:
        selector: //li/span[@class="list-quest"][contains(text(),'Born')]/following-sibling::text()
        postProcess:
          - replace:
              - regex: ^
                with: "Actual scraped birthdate: "
  coverScraper:
    scene:
      Title: &title
        selector: //h1/span[2]/text()
        postProcess:
          - replace:
              - regex: ^\"(.*)\"$
                with: $1
      Date: &date
        selector: //h2[text()[contains(.,'Published on')]]
        postProcess:
          - replace:
              - regex: .*Published on\s(\d{4}-\d{2}-\d{2})
                with: $1
      Performers: &performers
        Name: //h1/span[1]/a/text()
        URL: //h1/span[1]/a/@href
      Tags: &tags
        Name:
          selector: //meta[@itemprop="keywords"]/@content
          split: ","
      Studio: &studio
        Name: //h1/span[3]/a/text()
      Director: //h2/a
      Image:
        selector: //a[@class="gallery-image-link"]/img/@src
    gallery:
      Title: *title
      Date: *date
      Performers: *performers
      Tags: *tags
      Studio: *studio
      Photographer: //h2/a
# Last Updated July 23, 2024
