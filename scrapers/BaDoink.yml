name: "BaDoink"
sceneByURL:
  - action: scrapeXPath
    url:
      - badoinkvr.com
      - vrcosplayx.com
      - 18vr.com
      - babevr.com
      - realvr.com
      - kinkvr.com
    scraper: sceneScraper
performerByURL:
  - action: scrapeXPath
    url:
      - badoinkvr.com
      - vrcosplayx.com
      - 18vr.com
      - babevr.com
      - realvr.com
      - kinkvr.com
    scraper: performerScraper
# Uncomment this section to user Performer Search on this scraper
# performerByName:
#   action: scrapeXPath
#   queryURL: https://kinkvr.com/bdsm-performers/search/{}?all=1
#   scraper: performerSearch
xPathScrapers:
  sceneScraper:
    common:
      $details: //div[@class="video-rating-and-details"]
    scene:
      Title: $details/h1/text()
      Date:
        selector: $details//p[@class="video-upload-date"]/text()
        postProcess:
          - replace:
            - regex: Uploaded:\s
              with:
          - parseDate: January 02, 2006
      Details: $details//p[@class="video-description"]/text()
      Tags:
        Name: $details//p[@class="video-tags"]//a/text()
      Performers:
        Name: $details//p[@class="video-actors"]/a/text()
      Studio:
        Name: //meta[@name="dl8-customization-brand-name"]/@content
      Image: //img[@class="video-image"]/@src
      URL: //link[@rel='canonical']/@href
# Uncomment this section to user Performer Search on this scraper
  # performerSearch:
  #   common:
  #     $girlA: //div[@class="girl-card-info"]/a
  #   performer:
  #     Name: $girlA/span
  #     URL:
  #       selector: $girlA/@href
  #       postProcess:
  #         - replace:
  #             - regex: .*badoinkvr\.com/girl/redirect/([^\?]+).+
  #               with: https://badoinkvr.com/vr-pornstar/$1
  #             - regex: .*vrcosplayx\.com/girl/redirect/([^\?]+).+
  #               with: https://vrcosplayx.com/cosplaygirl/$1
  #             - regex: .*18vr\.com/girl/redirect/([^\?]+).+
  #               with: https://18vr.com/vrgirl/$1
  #             - regex: .*babesvr\.com/girl/redirect/([^\?]+).+
  #               with: https://babevr.com/vrbabe/$1
  #             - regex: .*realvr\.com/girl/redirect/([^\?]+).+
  #               with: https://realvr.com/pornstar/$1
  #             - regex: ^/
  #               with: https://kinkvr.com/
  performerScraper:
    common:
      $stats: //ul[@id='girlOptionDetails']
    performer:
      Name: //div[@class='girl-details-info']/h1/text()
      Gender:
        fixed: female
      URL: //link[@rel='canonical']/@href
      Twitter: //a[contains(@class,'social-media') and contains (@href,'twitter')]/@href
      Instagram: //a[contains(@class,'social-media') and contains (@href,'instagram')]/@href
      Ethnicity:
        selector: $stats/li[span[contains(.,'Ethnicity')]]/span[contains(@class,'value')]/text()
        postProcess:
          - map:
              Caucasian: white
              Asian: asian
              Black: black
              Latin: hispanic
      Country: $stats/li[span[contains(.,'Country')]]/span[contains(@class,'value')]/text()
      EyeColor: $stats/li[span[contains(.,'Eyes')]]/span[contains(@class,'value')]/text()
      Height:
        selector: $stats/li[span[contains(.,'Height')]]/span[contains(@class,'value')]/text()
        postProcess:
          - feetToCm: true
      Measurements: $stats/li[span[contains(.,'Measure')]]/span[contains(@class,'value')]/text()
      Aliases: $stats/li[span[contains(.,'Aka')]]/span[contains(@class,'value')]/text()
      Image: //img[@id='girlImage']/@src

# Last Updated November 17, 2020
