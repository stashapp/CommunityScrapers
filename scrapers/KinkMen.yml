name: Kink Men
sceneByURL:
  - action: scrapeXPath
    url:
      - kinkmen.com
    scraper: sceneScraper

sceneByFragment:
  action: scrapeXPath
  queryURL: https://www.kinkmen.com/shoot/{filename}
  # constructs the scene URL from the filename, provided that the filename includes the scene id
  queryURLReplace:
    filename:
      # the id in kink.com is a 1-6 digit number
      - regex: ^(\d+)[^\d].* # support filenames in the form 12345_performer_other_data.mp4
        with: $1
      - regex: .*\((\d+)\)\.[a-zA-Z\d]+$ #support filenames in the form scene - date - performer (12345).mp4
        with: $1
  scraper: sceneScraper
performerByName:
  action: scrapeXPath
  queryURL: https://www.kinkmen.com/search?type=performers&q={}
  scraper: performerSearch
performerByURL:
  - action: scrapeXPath
    url:
      - kinkmen.com/model
      - kink.com/model
    scraper: performerScraper

xPathScrapers:
  sceneScraper:
    scene:
      Title: //meta[@name="twitter:title"]/@content
      Date:
        selector: //span[@class="shoot-date"]/text()
        postProcess:
          - parseDate: January 2, 2006
      Details:
        selector: //span[@class="description-text"]/*[self::p or self::ul]
        concat: "\n\n"
      Code: //div[@class="shoot-page"]/@data-shootid
      Director: //span[@class="director-name"]
      Performers:
        Name:
          selector: //p[@class="starring"]/span[@class="names h5"]/a/text()
          postProcess:
            - replace:
                - regex: \,
                  with: ""
      Tags:
        Name:
          selector: //a[@class="tag"]
          postProcess:
            - replace:
                - regex: \,
                  with: ""
      Image: //meta[@name="twitter:image"]/@content
      Studio:
        Name:
          selector: //div[@class="column shoot-logo"]/a/@href
          postProcess:
            - replace:
                - regex: /channel/
                  with: ""
            - map:
                # List of sites as of 2023-11-06 from https://www.kinkmen.com/channels
                # [...new Set([...document.querySelectorAll('h3 > a')]
                #   .map(a => a.href.split("/").pop() + ": " + a.innerText))]
                #   .toSorted()
                #   .join("\n")
                30-minutes-of-torment: 30 Minutes Of Torment
                alternadudes: Alternadudes
                bondage-compound: Bondage Compound
                bonus-hole-boys: Bonus Hole Boys
                bound-and-gagged: Bound And Gagged
                bound-gods: Bound Gods
                bound-in-public: Bound In Public
                boynapped: Boynapped
                butt-machine-boys: Butt Machine Boys
                fetishnetwork-male: FetishNetwork Male
                kinkmen-classics: Kink Men Classics
                kink-men-series: Kink Men Series
                kinkmen-test-shoot: Kink Men Test Shoots
                kinky-bites-men: Kinky Bites Men
                masqulin: Masqulin
                men-at-play: Men At Play
                men-on-edge: Men On Edge
                missionary-boyz: Missionary Boyz
                my-dirtiest-fantasy: My Dirtiest Fantasy
                my-friends-feet: My Friends' Feet
                naked-kombat: Naked Kombat
                nasty-daddy: Nasty Daddy
                str8hell: Str8Hell
                sw-nude: SW Nude
                taken-rough: Taken Rough
                therapy-dick: Therapy Dick
                titanmen-rough: TitanMen Rough
                wrestlingmale: WrestlingMale
                yes-father: Yes Father
                yesirboys: Yesirboys
  # Kinkmen.com pages still contain old/broken Kink.com link; commenting out URL as it is currently inaccurate
  #    URL: //link[@rel="canonical"]/@href
  performerSearch:
    common:
      $result: //div/a[contains(@href, "/model") and contains(concat(" ", normalize-space(@class), " "), " model-link ")]

    performer:
      Name: $result/img/@alt
      URL:
        selector: $result/@href
        postProcess:
          - replace:
              - regex: ^
                with: https://www.kinkmen.com
  performerScraper:
    performer:
      Name:
        selector: //h1/text() # //div[@font-size][number(translate(@font-size,"px",""))>=35]/text()
        concat: " "
        postProcess:
          - replace:
              - regex: ^\s+
                with: ""
              - regex: \s+$
                with: 
      Twitter:
        selector: '//div/a[contains(concat(" ", normalize-space(@class), " "), " social-link ") and contains(@href, "twitter.com")]/@href'
      Image:
        selector: //div/img[contains(@src, "imagedb")][1]/@src
      Tattoos:
        selector: '//div/span[text()=" tags: "]/following-sibling::a[contains(@href,"/tattoo")]//text()'
        postProcess:
          - map:
              Tattoo: "Yes"
      Piercings:
        selector: '//div/span[text()=" tags: "]/following-sibling::a[contains(@href,"/pierced")]/span'
        concat: "\n"
      Tags:
        Name: '//div/span[text()=" tags: "]/following-sibling::a/span/text()'
      Details:
        selector: '//div/span/p[@class="bio"]/following-sibling::p'
        concat: "\n"
        postProcess:
          - replace:
              - regex: '(?i)<a[^>]*>'
                with: ""
      URL: //link[@rel="canonical"]/@href
driver:
  headers:
    - Key: User-Agent
      Value: stash-scraper/1.0.0
# Last Updated November 06, 2023