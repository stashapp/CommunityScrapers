name: "IsThisReal"
sceneByURL:
  - action: scrapeXPath
    url:
      - isthisreal.com/en/video/
    scraper: sceneScraper
xPathScrapers:
  sceneScraper:
    common:
      $videoscript: //script[contains(text(), 'ScenePlayerId = "player"')]/text()
      $datascript: //script[contains(text(), 'sceneDetails')]/text()
      $imagescript: //script[contains(text(), 'picPreview')]/text()
    scene:
      Title:
        selector: $videoscript
        postProcess:
          - replace:
              - regex: .+(?:"sceneTitle":")([^"]+).+
                with: $1
              - regex: .+(?:"sceneTitle":"").+
                with:
      Date:
        selector: $videoscript
        postProcess:
          - replace:
              - regex: .+(?:"sceneReleaseDate":")([^"]+).+
                with: $1
          - parseDate: 2006-01-02
      Details:
        selector: $datascript
        postProcess:
          - replace:
              - regex: .+(?:sceneDescription":")(.+)(?:","sceneActors).+
                with: $1
              - regex: .+(?:"sceneDescription":"").+
                with:
              - regex: <\\\/br>|<br\s\\\/>|<br>
                with: "\n"
      Tags:
        Name:
          selector: $datascript
          postProcess:
            - replace:
                - regex: .+(?:sceneCategories":\[)(.+)(?:\],"sceneViews").+
                  with: $1
                - regex: \"
                  with:
          split: ","
      Performers:
        Name:
          selector: $datascript
          postProcess:
            - replace:
                - regex: .+(?:"sceneActors":)(.+)(?:,"sceneCategories")
                  with: $1
                - regex: \{"actorId":"\d+","actorName":|}|\[|\]|"
                  with:
          split: ","
      Image:
        selector: $imagescript
        postProcess:
          - replace:
              - regex: .+(?:picPreview":")([\w:]+)(?:[\\\/]+)([\w-\.]+)(?:[\\\/]+)(\w+)(?:[\\\/]+)(\d+)(?:[\\\/]+)([\d_]+)(?:[\\\/]+)(\w+)(?:[\\\/]+)(\d+)(?:[\\\/]+)(\d+)(?:[\\\/]+)([\w]+)(?:[\\\/]+)([\w.]+).+
                with: $1//$2/$3/$4/$5/$6/$7/$8/$9/$10
              # if using the transport subdomain, parameters need to be passed
              # otherwise a cropped square image is returned by default
              - regex: (https:\/\/transform.+)
                with: $1?width=960&height=543&enlarge=true
      Studio:
        Name:
          selector: //link[@rel="canonical"]/@href
          postProcess:
            - replace:
                - regex: .+(?:\/video\/)([^\/]+).+
                  with: $1

# Last Updated November 08, 2020
