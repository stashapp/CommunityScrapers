name: JavLibrary
sceneByFragment:
  action: scrapeXPath
  queryURL: https://www.javlibrary.com/en/vl_searchbyid.php?keyword={filename}
  queryURLReplace:
    filename:
      - regex: -JG5|-JG6
        with: ""
      - regex: (.*[^a-zA-Z0-9])*([a-zA-Z-]+\d+)(.+)
        with: $2
  # Note: If javlibrary doesn't work, you can replace javlibrary with any mirrors in the queryURL.
  # The scraper matches the DVD version of a title. If you want the Blu-Ray version you'll need to add the correct URL manually and scrape using that afterwards.
  scraper: sceneScraper
sceneByURL:
  - action: scrapeXPath
    url:
      - javlibrary.com/
      - m45e.com/
      - g46e.com/
      - b47w.com/
      - b49t.com/
    scraper: sceneScraper
movieByURL:
  - action: scrapeXPath
    url:
      - javlibrary.com/
      - m45e.com/
      - g46e.com/
      - b47w.com/
      - b49t.com/
    scraper: movieScraper
xPathScrapers:
  sceneScraper:
    scene:
      Title:
        selector: //div[@id="video_id"]/table/tbody/tr/td[@class="text"]/text()
      # Using URL to still get a URL with sceneByFragment if a duplicate exist.
      URL:
        selector: //div[@class="videos"]/div/a/@title[not(contains(.,"(Blu-ray"))]/../@href|//meta[@property="og:url"]/@content
        postProcess:
          - replace:
            - regex: (.*\?)(.*)
              with: $2
            - regex: ^
              with: https://www.javlibrary.com/en/?
      Date:
        selector: //div[@id="video_date"]/table/tbody/tr/td[@class="text"]/text()
      # Uncomment below for trying to use the release date from R18.com. Don't forget to comment/remove the "Date" above. (If you use CDP, you will wait way longer)
      #Date:
      #  selector: //a[text()="purchasing HERE"]/@href|//link[@rel='canonical']/@href
      #  concat: "|"
      #  postProcess:
      #    - replace:
      #      - regex: ^redirect\.php\?url=\/\/
      #        with: "https://"
      #      - regex: \|\/\/www\.javlibrary\.com\/en\/\?v=
      #        with: "?lg="
      #    - subScraper:
      #        selector: //li[contains(@class,"item-list")]/a//img[string-length(@alt)=string-length(preceding::div[@class="genre01"]/span/text())]/ancestor::a/@href|//div[contains(text(),"Unable to find related item")]/preceding::option[@value="USD"]/@data-src
      #    - replace:
      #      - regex: (.+\?lg=)(.+&unit=USD)
      #        with: https://www.javlibrary.com/en/?v=$2
      #    - subScraper:
      #        selector: //section[@class="clearfix"]/div[@class="product-details"]/dl/dt[contains(.,"Release Date")]/../dd[@itemprop="dateCreated"]/text()|//td[@class="header" and text()="Release Date:"]/following-sibling::td/text()
      #    - replace:
      #      - regex: \.
      #        with: ""
      #      - regex: ","
      #        with: ""
      #      - regex: \s+
      #        with: ""
      #      - regex: Sept
      #        with: "09"
      #      - regex: Oct
      #        with: "10"
      #      - regex: Nov
      #        with: "11"
      #      - regex: Dec
      #        with: "12"
      #      - regex: Jan
      #        with: "01"
      #      - regex: Feb
      #        with: "02"
      #      - regex: Mar
      #        with: "03"
      #      - regex: Apr
      #        with: "04"
      #      - regex: May
      #        with: "05"
      #      - regex: June
      #        with: "06"
      #      - regex: July
      #        with: "07"
      #      - regex: Aug
      #        with: "08"
      #      - regex: (\d{2})(\d{2})(\d{4})
      #        with: $3-$1-$2
        
      Details:
        selector: //div[@id="video_title"]/h3/a/text()
        postProcess:
          - replace:
            - regex: ^(.*? ){1}
              with:
      # Uncomment below for trying to use Details from R18.com. Don't forget to comment/remove the "Details" above. (If you use CDP, you will wait way longer)
      #Details:
      #  selector: //a[text()="purchasing HERE"]/@href|//link[@rel='canonical']/@href
      #  concat: "|"
      #  postProcess:
      #    - replace:
      #      - regex: ^redirect\.php\?url=\/\/
      #        with: "https://"
      #      - regex: \|\/\/www\.javlibrary\.com\/en\/\?v=
      #        with: "?lg="
      #    - subScraper:
      #        selector: //li[contains(@class,"item-list")]/a//img[string-length(@alt)=string-length(preceding::div[@class="genre01"]/span/text())]/ancestor::a/@href|//div[contains(text(),"Unable to find related item")]/preceding::option[@value="USD"]/@data-src
      #    - replace:
      #      - regex: (.+\?lg=)(.+&unit=USD)
      #        with: https://www.javlibrary.com/en/?v=$2
      #    - subScraper:
      #        selector: //div[@class="col01"]/h1/cite[@itemprop="name"]/text()|//div[contains(@class,"cmn-box-description")]/p|//div[@id="video_title"]/h3/a/text()
      #        concat: "\n\n"
      # R18 censors somes words.
      #    - replace:
      #      - regex: R\*{2}e
      #        with: "Rape"
      #      - regex: G\*{7}g
      #        with: "Gangbang"
      #      - regex: T\*{5}e
      #        with: "Torture"
      #      - regex: V\*{5}t
      #        with: "Violent"
      #      - regex: S\*{3}e
      #        with: "Slave"
      #      - regex: S\*{3}ery
      #        with: "Slavery"
      #      - regex: D\*{3}king
      #        with: "Drinking"
      #      - regex: S\*{5}t
      #        with: "Student"
      #      - regex: SK\*{2}ls
      #        with: "Skills"
      #      - regex: P\*{4}hed
      #        with: "Punished"
      #      - regex: D\*{2}gged
      #        with: "Drugged"
      #      - regex: F\*{3}ed
      #        with: "Fucked"
      #      - regex: D\*{3}k
      #        with: "Drunk"
      #      - regex: S\*{8}l
      #        with: "Schoolgirl"
      #      - regex: R\*{4}g
      #        with: "Raping"
      #      - regex: P\*{4}hment
      #        with: "Punishment"
      #      - regex: M\*{4}ter
      #        with: "Molester"
      #      - regex: I\*{4}t
      #        with: "Incest"
      Tags:
        Name: //div[@id="video_genres"]/table/tbody/tr/td[@class="text"]/span/a
      Performers:
        Name: //div[@id="video_cast"]/table/tbody/tr/td[@class="text"]/span/span/a
      Image:
        selector: //div[@id="video_jacket"]/img/@src
        postProcess:
          - replace:
            - regex: (http:|https:)
              with:
            - regex: ^
              with: "https:"
      Studio:
        Name: //div[@id="video_maker"]/table/tbody/tr/td[@class="text"]/span/a/text()
  movieScraper:
    movie:
      Name: //div[@id="video_id"]/table/tbody/tr/td[@class="text"]/text()
      Director: //div[@id='video_director']/table/tbody/tr/td[@class="text"]/span/a/text()
      Duration: //div[@id="video_length"]/table/tbody/tr/td/span[@class="text"]/text()
      Date: //div[@id="video_date"]/table/tbody/tr/td[@class="text"]/text()
      Synopsis:
        selector: //div[@id="video_title"]/h3/a/text()
        postProcess:
          - replace:
            - regex: ^(.*? ){1}
              with:
      Studio:
        Name: //div[@id="video_maker"]/table/tbody/tr/td[@class="text"]/span/a/text()
      FrontImage:
        selector: //div[@id="video_jacket"]/img/@src
        postProcess:
          - replace:
            - regex: (http:|https:)
              with:
            - regex: ^
              with: "https:"

# Switched to CDP due to Cloudflare and Javascript errors.
# The 5 second sleep in combination with the CDP driver should prevent
# Standard Cloudflare errors in regards to their Javascript check.
# There is still the possibility of getting a CAPTCHA block based on Cloudflare's
# analysis of your traffic pattern. Nothing can be done about that besides
# waiting it out or using one of the mirrors.
driver:
  useCDP: true
  sleep: 5

# Last Updated December 30, 2020
