name: Pornhub
performerByURL:
  - action: scrapeXPath
    url:
      - pornhub.com/pornstar/
      - pornhub.org/pornstar/
      - pornhub.com/model/
      - pornhub.org/model/
    scraper: performerScraper
sceneByURL:
  - action: scrapeXPath
    url:
      - pornhub.com/view_video.php?viewkey=
      - pornhub.org/view_video.php?viewkey=
    scraper: sceneScraper
sceneByFragment:
  action: scrapeXPath
  queryURL: https://www.pornhub.com/view_video.php?viewkey={filename}
  queryURLReplace:
    filename:
      - regex: (?:.*[^a-zA-Z\d])?((?:ph)?(?:[a-zA-Z\d]{13})).+
        with: $1
      - regex: .*\.[^\.]+$ # if no ph id is found in the filename
        with: # clear the filename so that it doesn't leak to ph
  scraper: sceneScraper

sceneByName:
  action: scrapeXPath
  queryURL: https://www.pornhub.com/video/search?search={}
  scraper: sceneSearch
sceneByQueryFragment:
  action: scrapeXPath
  queryURL: "{url}"
  scraper: sceneScraper

performerByName:
  action: script
  script:
    - python3
    - PornhubStar.py
    - performer-by-name

xPathScrapers:
  sceneSearch:
    common:
      $searchItem: //ul[contains(@class, "search-video-thumbs") and not(@id="bottomVideos")]
      $searchThumb: //ul[contains(@class, "search-video-thumbs") and not(@id="bottomVideos")]//div[contains(@class, "thumbnail-info-wrapper")]

    scene:
      Title: $searchThumb//span[@class="title"]/a
      URL:
        selector: $searchThumb//span[@class="title"]/a/@href
        postProcess:
          - replace:
              - regex: ^
                with: "https://www.pornhub.com"
      Image: $searchItem//div[contains(@class, "phimage")]//img/@data-mediumthumb
      Studio:
        Name: $searchThumb//div[contains(@class, "usernameWrap")]/a[matches(@href, "/(channels|model|pornstar)/")]
  performerScraper:
    common:
      $infoPiece: //div[@class="infoPiece"]
      $infoContainer: //div[@class="infoContainer"]
      $smallInfo: span[@class="smallInfo"]

    performer:
      Name: //h1[@itemprop="name"]|$infoContainer//h1
      Birthdate:
        selector: //span[@itemprop="birthDate"]|$infoPiece[contains(span,"Born:")]/text()
        postProcess:
          - parseDate: Jan 2, 2006
          - parseDate: 2006-01-02
      Country:
        selector: $infoPiece[contains(span,"Birthplace:")]/text()|$infoPiece[contains(span,"City and Country:")]/$smallInfo|$infoPiece[contains(span,"Birth Place:")]/$smallInfo
        postProcess:
          - replace:
              - regex: .+,\s?([^,]+$)
                with: $1
          - map:
              US: "USA"
              United States of America: "USA"
      Gender: $infoPiece[contains(span,"Gender:")]/$smallInfo
      Twitter: //ul[contains(@class,"socialList")]//a[contains(@href,"twitter.com/")]/@href
      Instagram: //ul[contains(@class,"socialList")]//a[contains(@href,"instagram.com/")]/@href
      Measurements: $infoPiece[contains(span,"Measurements:")]/$smallInfo|$infoPiece[contains(span,"Measurements:")]/text()
      Weight:
        selector: $infoPiece[contains(span,"Weight:")]/$smallInfo|$infoPiece[contains(span,"Weight:")]/text()
        postProcess:
          - replace:
              - regex: .*\((\d+)\s*kg\)
                with: $1
      Height:
        selector: $infoPiece[contains(span,"Height:")]/$smallInfo|$infoPiece[contains(span,"Height:")]/text()
        postProcess:
          - replace:
              - regex: .*\((\d+)\s*cm\)
                with: $1
      Details: //div[@itemprop="description" or starts-with(@class,"text longBio")]
      Ethnicity: $infoPiece[contains(span,"Ethnicity:")]/$smallInfo|$infoPiece[contains(span,"Ethnicity:")]/text()
      FakeTits: $infoPiece[contains(span,"Fake Boobs:")]/$smallInfo
      Piercings: $infoPiece[contains(span,"Piercings:")]/$smallInfo
      Tattoos: $infoPiece[contains(span,"Tattoos:")]/$smallInfo
      HairColor: $infoPiece[contains(span,"Hair Color:")]/$smallInfo
      CareerLength:
        selector: $infoPiece[contains(span,"Career Start and End:")]/$smallInfo
        postProcess:
          - replace:
              - regex: \s+to\s+
                with: "-"
      URLs: //link[@rel="canonical"][1]/@href
      Image: //div[@class="thumbImage"]/img/@src|//img[@id="getAvatar"]/@src
  sceneScraper:
    common:
      $datablob: //script[contains(., 'VideoObject')]/text()
      $videowrap: //div[@class="video-wrapper"]
      $videoDetails: //div[contains(@class,"video-detailed-info")]
      # Check that the button does not appear inside a "From:" div because then you'll get the studio
      # as a performer if it's an affiliate channel, for example https://www.pornhub.com/view_video.php?viewkey=67e19227400d2
      $studioButton: //div[contains(@class,"video-actions-tabs")]//span[not(ancestor::div[@class="from"])][contains(concat(" ",normalize-space(@class)," ")," usernameBadgesWrapper ")]//a
      # datalayer for unlisted-proof videos #2385
      $dataLayer: //script[@type="text/javascript"][contains(.,'window.dataLayer.push')]
    scene:
      Title:
        selector: //h1
        postProcess:
          - replace:
              # This scraper can be misused and end up pulling its information
              # from https://www.pornhub.com/view_video.php?viewkey=
              # that is, a page without a proper Pornhub scene code:
              # this will make it return an empty result instead of an erroneous title
              - regex: ^Recently Featured Porn Videos$
                with: ""
      URL: //meta[@property="og:url"]/@content
      Date:
        selector: $dataLayer
        postProcess:
          - replace:
              - regex: .*(?:'video_date_published'\s*:\s*')(\d+)'.+
                with: $1
          - parseDate: "20060102"
      Code:
        selector: //meta[@property="og:url"]/@content
        postProcess:
          - replace:
              - regex: '.+?(\=)'
                with:
      Tags:
        Name: $videoDetails//a[@data-label="category"] | $videoDetails//a[@data-label="tag"]
      Performers:
        Name: $videoDetails//a[@data-label="pornstar"] | $studioButton
      Image: //meta[@property="og:image"]/@content
      Studio:
        Name: $videoDetails//a[@data-label="channel"] | $studioButton

driver:
  cookies:
    - CookieURL: "https://www.pornhub.com"
      Cookies:
        - Name: "accessAgeDisclaimerPH"
          Domain: ".pornhub.com"
          Value: "1"
          Path: "/"
# Last Updated September 26, 2026
