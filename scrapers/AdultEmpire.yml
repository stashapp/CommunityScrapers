name: AdultEmpire

performerByName:
  action: scrapeXPath
  queryURL: https://www.adultempire.com/performer/search?q={}
  scraper: performerSearch

performerByURL:
  - action: scrapeXPath
    url: 
      - www.adultempire.com
    scraper: performerScraper

movieByURL:
  - action: scrapeXPath
    url:
      - adultdvdempire.com
      - adultempire.com
    scraper: movieScraper

sceneByURL:
  - action: scrapeXPath
    url:
      - adultdvdempire.com/clip
      - adultempire.com/clip
    scraper: sceneScraper
  - action: scrapeXPath
    url:
      - adultdvdempire.com
      - adultempire.com
    scraper: sceneMovieScraper

sceneByName:
  action: scrapeXPath
  # if needed replace `dvd` with `vod`
  queryURL: https://www.adultdvdempire.com/dvd/search?q={}
  scraper: sceneSearch

sceneByQueryFragment:
  action: scrapeXPath
  queryURL: "{url}"
  scraper: sceneScraper


xPathScrapers:
  performerSearch:
    common:
      $performerEl: //div[@id="performerlist"]//a
    performer:
      Name: $performerEl/@label
      URL:
        selector: $performerEl/@href
        postProcess:
          - replace:
              - regex: ^
                with: https://www.adultempire.com
  performerScraper:
    common:
      $performerEl: //a[@label="Headshot"]
    performer:
      Name: $performerEl/img/@title
      Image: $performerEl/@href
  sceneSearch:
    scene:
      Title:
        selector: //div[@class="item-title"]/a/@*[local-name()="href" or local-name()="title"]
        concat: "|"
        postProcess:
          - replace:
            - regex: '/(\d+)/[^|]+\|([^|]+)'
              with: "$2 ($1)"
        split: "|"
      URL:
        selector: //div[@id="content"]//div[@class="item-title"]/a/@href
        postProcess:
          - replace:
              - regex: ^
                with: "https://www.adultdvdempire.com"
      Image:
        selector: //a[@class="boxcover"]/img/@data-src

  movieScraper:
    movie:
      Name: //h1/text()
      Director: //a[@label="Director"]/text()
      Duration:
        selector: //small[contains(text(), "Length")]/following-sibling::text()
        postProcess:
          - replace:
            - regex: " hrs. "
              with: ":"
            - regex: " mins."
              with: ":00"
      Date:
        selector: //small[contains(text(), "Released")]/following-sibling::text()
        postProcess:
          - parseDate: Jan 02 2006
      Synopsis:
        selector: //h4[contains(@class,"synopsis")]//text()
        concat: " "
      Studio:
        Name: //a[@label="Studio"]/text()
      FrontImage: //a[@id="front-cover"]/@data-href
      BackImage: //a[@id="back-cover"]/@href
      # Rating is not yet implemented in the UX
      # Rating:
      #   selector: //span[@class='rating-stars-avg']/text()
      #   postProcess:
      #     - replace:
      #       - regex: (\d).+
      #         with: $1
      URL: //meta[@name='og:url']/@content
  sceneScraper:
    common:
      $movie: //div[contains(text(), "from")]/a
      $studio: //div[contains(text(), "by")]/a
      $performers: //strong[contains(text(), "Starring")]/following-sibling::a
      $sceneId: //section/@data-tid
    scene:
      Title: //div[@class="clip-page__detail__title__primary"]/text()
      Details:
        selector: //h4[contains(@class,"synopsis")]//text()
        concat: " "
      Date:
        selector: //strong[contains(text(), "Released")]/following-sibling::text()
        postProcess:
          - parseDate: Jan 02 2006
      Studio:
        Name: $studio/text()
        URL:
          selector: $studio/@href
          postProcess:
            - replace:
              - regex: ^
                with: "https://www.adultdvdempire.com"
      Movies:
        Name: $movie/text()
        URL: &movieUrl
          selector: $movie/@href
          postProcess:
            - replace:
                - regex: ^
                  with: "https://www.adultdvdempire.com"
      Tags:
        Name:
          selector: //strong[contains(text(), "Acts")]/..//a/text() | //strong[contains(text(), "Acts")]/..//dt/text()
          postProcess:
            - replace:
                - regex: \:$
                  with:
      Performers:
        Name: $performers/text()
        URL:
          selector: $performers/@href
          postProcess:
            - replace:
              - regex: ^
                with: "https://www.adultdvdempire.com"
      Image:
        selector: *movieUrl
        postProcess:
          - subScraper
              selector: (//a[@scene_id="$sceneId"])[1]/@href
  sceneMovieScraper:
    scene:
      Title: //h1/text()
      Details:
        selector: //h4[contains(@class,"synopsis")]//text()
        concat: " "
      Date:
        selector: //small[contains(text(), "Released")]/following-sibling::text()
        postProcess:
          - parseDate: Jan 02 2006
      Image: //a[@id="front-cover"]/@data-href
      Studio:
        Name: //a[@label="Studio"]/text()
      Movies:
        Name: //h1/text()
        URL: //link[@rel="canonical"]/@href
      Tags:
        Name: //div[h2[contains(.,'Categories')]]//a[@label="Category"]/text()
      Performers:
        Name: //a[@label="Performer"]//text()
        URL:
          selector: //a[@label="Performer"]/@href
          postProcess:
            - replace:
                - regex: ^
                  with: "https://www.adultdvdempire.com"
      URL: //meta[@name='og:url']/@content

debug:
  printHTML: true

# Last Updated August 04, 2023
