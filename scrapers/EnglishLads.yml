name: English Lads

sceneByURL:
  - action: scrapeXPath
    url:
      - englishlads.com/video
    scraper: sceneScraper

performerByURL:
  - action: scrapeXPath
    url:
      - englishlads.com/model
    scraper: performerScraper

galleryByURL:
  - action: scrapeXPath
    url:
      - englishlads.com/photo
    scraper: galleryScraper

xPathScrapers:
  sceneScraper:
    scene:
      Title: &title
        selector: //div[@class="shoot-title"]/h2
        postProcess:
          - replace:
              - regex: ^(.*?)-(.*)-(.*?)$
                with: "$2"
      Date: &date
        selector: //div[@class="shoot-title"]/h2
        postProcess:
          - replace:
              - regex: ^(.*?)-(.*)-(.*?)$
                with: "$1"
              - regex: (st|nd|rd|th)\b
                with: ""
          - parseDate: "2 Jan 2006"
      Performers: &performers
        Name: //div[contains(@class, "shoot-title")]//a
        URLs:
          selector: //div[contains(@class, "shoot-title")]//a/@href
          postProcess: &prependHost
            - replace:
                - regex: ^
                  with: https://www.englishlads.com$1
      Details: &details //div[not(@class) and @style]
      Tags: &tags
        Name: //a[@class="more" and contains(@href, "tag=")]
      Image:
        selector: //img[@class="shoot-splash-image"]/@src | //video/@data-poster
        postProcess: *prependHost
      Studio: &studio
        Name:
          fixed: English Lads

  performerScraper:
    performer:
      Name: //h1[@itemprop="name"]/text()
      Gender:
        fixed: Male
      Height:
        selector: //span[@itemprop='title']
        postProcess:
          - replace:
              - regex: (.*)(\b\d+\'\d{1,2}")(.*)
                with: "$2"
          - feetToCm: true
      Measurements:
        selector: //span[@itemprop='title']
        postProcess:
          - replace:
              - regex: \s+|\xA0+
                with: "_"
              - regex: _+
                with: " "
              - regex: (\d{2}\s*yo)\s*(\d{1,2}'\d{1,2}")\s*(\s*\d{2}")\s*(\d{2}")(.*)
                with: "Waist: $3, Chest: $4"
      PenisLength:
        selector: //span[@itemprop='title']
        postProcess:
          - replace:
              - regex: ^(.*?)(\d+\.?\d?)("\s+cock)$
                with: "0'$2"
          - feetToCm: true
      Circumcised:
        selector: //div[@class='model-text']
        postProcess:
          - replace:
              - regex: (.*?)(uncut|cut)(.*)
                with: $2
          - map:
              uncut: UNCUT
              cut: CUT
      Details:
        selector: //div[@class='model-text']/i
      Image:
        selector: //script[contains(.,"modelimage")]
        postProcess:
          - replace:
              - regex: (.*?)(\/public.*?)',(.*)
                with: "$2"
              - regex: "(.*)"
                with: "https://www.englishlads.com$1"

  galleryScraper:
    gallery:
      Title: *title
      Date: *date
      Performers: *performers
      Details: *details
      Tags: *tags
      Studio: *studio
# Last Updated September 17, 2025
